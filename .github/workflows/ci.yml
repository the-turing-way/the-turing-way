name: CI

# run on pull requests to main, but ignore pull requests from the all-contributors bot
on:
  pull_request:
    branches:
      - main
      - "!all-contributors/**"

# set the default shell to bash for all jobs
# this is important for the windows OS!
defaults:
  run:
    shell: bash

jobs:
  build-jb:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python_version: ["3.13"]
      fail-fast: false # Don't cancel all jobs if one fails

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout-repository
        uses: actions/checkout@v5

      - name: Setup Python ${{ matrix.python_version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: make deps
        working-directory: ./book

      - name: Build Jupyter-Book with warnings raised to errors
        run: make ci
        working-directory: ./book

      - name: Upload html output as artifact
        if: contains(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v5
        with:
          name: book-html-${{ github.run_id }}
          path: ./book/website/_build/html/

  offline-link-check:
    name: Link Check
    needs: build-jb
    runs-on: ubuntu-latest
    steps:
      # We only need the lychee config file from the repository
      - name: Checkout lychee config file from repository
        uses: actions/checkout@v5
        with:
          sparse-checkout: |
            lychee.toml
          sparse-checkout-cone-mode: false

      - name: Ensure destination folder exists
        run: |
          mkdir -p ./book/website/_build/html

      - name: Download book html files from artifact
        uses: actions/download-artifact@v6
        with:
          name: book-html-${{ github.run_id }}
          path: ./book/website/_build/html/

      - name: Check offline links
        uses: lycheeverse/lychee-action@v2
        with:
          args: --config './lychee.toml' --no-progress --offline --root-dir "$GITHUB_WORKSPACE/book/website/_build/html/" 'book/website/_build/html/**/*.html'
          fail: true
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} # Use runners GitHub token to avoid rate limiting
